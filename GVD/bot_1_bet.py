from collections import defaultdict, Counter
import statistics

class OneBetStrategy:
    def __init__(self, number, log_filename="bet_logs.txt"):
        self.initial_bank = 190000
        self.bank = self.initial_bank
        self.bet = 500
        self.number = str(number)  # —Ö—Ä–∞–Ω–∏–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É, —á—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å '00'
        self.betting = True
        self.bet_stop = 20
        self.fall_count = 0
        self.spin_waiting = 25
        self.spin_count_before_bet = 0
        self.wins = 0
        self.losses = 0
        self.log_filename = log_filename  # –õ–æ–≥-—Ñ–∞–π–ª

        # –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        with open(self.log_filename, 'w', encoding='utf-8') as log_file:
            log_file.write("–ó–∞–ø—É—Å–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ —á–∏—Å–ª–æ: " + self.number + "\n")
            log_file.write("–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–Ω–∫: 1000\n")
            log_file.write("–°—Ç–∞—Ä—Ç –∏–≥—Ä—ã...\n")

    def parse_line(self, line):
        try:
            return line.strip().split('-')[-1].strip()
        except IndexError:
            return None

    def log(self, message):
        # –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        with open(self.log_filename, 'a', encoding='utf-8') as log_file:
            log_file.write(message + "\n")

    def play(self, input_filename):
        results = []

        try:
            with open(input_filename, 'r', encoding='utf-8') as f:
                for line in f:
                    number = self.parse_line(line)
                    if number in [str(n) for n in range(37)] + ['00']:
                        results.append(number)
        except FileNotFoundError:
            print(f"–§–∞–π–ª '{input_filename}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if not results:
            print("–í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞.")
            self.log("–í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞.")
            return

        try:
            for number in results:
                self.spin_count_before_bet += 1

                if self.betting and self.spin_count_before_bet > self.spin_waiting:
                    self.log(f"üéØ –°—Ç–∞–≤–∏–º. –°–ø–∏–Ω {self.spin_count_before_bet}. –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {number}. –ë–∞–Ω–∫: {self.bank}")

                    if number == self.number:
                        self.bank += 35 * self.bet
                        self.wins += 1
                        self.fall_count = 0
                        self.log(f"‚úÖ –í—ã–∏–≥—Ä—ã—à! –ß–∏—Å–ª–æ {self.number} –≤—ã–ø–∞–ª–æ. –ë–∞–Ω–∫ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞: {self.bank}")

                        self.spin_count_before_bet = 0
                        self.log(f"‚è∏ –ü–∞—É–∑–∞ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞ –Ω–∞ {self.spin_waiting} —Å–ø–∏–Ω–æ–≤.")
                    else:
                        self.bank -= self.bet
                        self.fall_count += 1
                        self.losses += 1
                        self.log(f"‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à. –ß–∏—Å–ª–æ {number} –Ω–µ –≤—ã–ø–∞–ª–æ. –ë–∞–Ω–∫ –ø–æ—Å–ª–µ –ø—Ä–æ–∏–≥—Ä—ã—à–∞: {self.bank}")

                        if self.fall_count >= self.bet_stop:
                            self.betting = False
                            self.spin_count_before_bet = 0
                            self.log(f"‚õî –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º —Å—Ç–∞–≤–∫–∏ –ø–æ—Å–ª–µ {self.fall_count} –Ω–µ—É–¥–∞—á. –ñ–¥—ë–º –≤—ã–ø–∞–¥–µ–Ω–∏—è —á–∏—Å–ª–∞.")
                
                else: 
                    self.log(f"üé∞ –°–ø–∏–Ω {self.spin_count_before_bet}. –í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {number}. –ë–∞–Ω–∫: {self.bank}")
                    if number == self.number:
                        self.betting = True
                        self.spin_count_before_bet = 0
                        self.fall_count = 0
                        self.log(f"‚ñ∂Ô∏è –ß–∏—Å–ª–æ {self.number} –≤—ã–ø–∞–ª–æ. –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–≤–∫–∏.")

            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            self.log("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            self.log(f"–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–Ω–∫: {self.initial_bank}")
            self.log(f"–ö–æ–Ω–µ—á–Ω—ã–π –±–∞–Ω–∫: {self.bank}")
            self.log(f"–í—ã–∏–≥—Ä—ã—à–µ–π: {self.wins}")
            self.log(f"–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π: {self.losses}")
            self.log(f"–ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: {self.bank - self.initial_bank}")
        except Exception as e:
            self.log(f"–û—à–∏–±–∫–∞ {e}")

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    input_filename = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, roulette_data.txt): ").strip()
    number = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ–º —Å—Ç–∞–≤–∏—Ç—å (0‚Äì36 –∏–ª–∏ 00): ").strip()
    log_filename = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, bet_logs.txt): ").strip() or "bet_logs.txt"

    strategy = OneBetStrategy(number, log_filename)
    strategy.play(input_filename)
    print(f"–õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {log_filename}")