import requests
from bs4 import BeautifulSoup

url = "https://daily.heroeswm.ru/roulette/all.php"

response = requests.get(url)
soup = BeautifulSoup(response.text, "html.parser")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å–ª–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–ø–∏–Ω—ã) –≤ —Å–ø–∏—Å–æ–∫, —Ñ–∏–ª—å—Ç—Ä—É—è —Å—Ç—Ä–æ–∫–∏ —Å "–Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏"
numbers = []
for td in soup.find_all("td"):
    span = td.find("span")
    if span and span.text.strip():
        number = span.text.strip()
        if number.isdigit() or number == "00":  # –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∑–µ—Ä–æ
            time = td.get("title", "–Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏")
            if time != "–Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏":  # —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏
                numbers.append((time, number))

# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º "00" –≤ 37, –æ–±—ã—á–Ω—ã–µ —á–∏—Å–ª–∞ –≤ int
parsed_numbers = []
for time, number in numbers:
    if number == "00":
        parsed_numbers.append((time, 37))
    else:
        parsed_numbers.append((time, int(number)))


def find_last_repeats(data, max_interval=20):
    """
    –ù–∞—Ö–æ–¥–∏—Ç, —Å–∫–æ–ª—å–∫–æ —Å–ø–∏–Ω–æ–≤ –Ω–∞–∑–∞–¥ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —á–µ—Ä–µ–∑ N —Å–ø–∏–Ω–æ–≤ (N –æ—Ç 1 –¥–æ max_interval).
    """
    results = {}

    # –ü—Ä–æ—Ö–æ–¥–∏–º –æ—Ç —Å–∞–º–æ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    for interval in range(1, max_interval + 1):
        found = False
        for i in range(len(data) - 1):
            if data[i][1] == data[i + interval][1]:
                # –°–∫–æ–ª—å–∫–æ —Å–ø–∏–Ω–æ–≤ –Ω–∞–∑–∞–¥: —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –Ω–∞—á–∞–ª–∞ –¥–æ i
                spins_ago = i  # —á–∏—Å–ª–æ —Å–ø–∏–Ω–æ–≤ –Ω–∞–∑–∞–¥ –æ—Ç –Ω–∞—á–∞–ª–∞
                results[interval] = (spins_ago, data[i][1])  # –¥–æ–±–∞–≤–ª—è–µ–º —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–≤—Ç–æ—Ä–∏–ª–æ—Å—å
                found = True
                break
        if not found:
            results[interval] = None  # –ù–µ—Ç —Ç–∞–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤

    return results


# –ü–µ—á–∞—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
print("üîÅ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:")
stats = find_last_repeats(parsed_numbers)
for interval, (spins_ago, number) in stats.items():
    if spins_ago is not None:
        print(f"–ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {interval} —Å–ø–∏–Ω–æ–≤: {number} –±—ã–ª {spins_ago} —Å–ø–∏–Ω–æ–≤ –Ω–∞–∑–∞–¥")
    else:
        print(f"–ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ {interval} —Å–ø–∏–Ω–æ–≤: ‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
