from collections import deque, Counter

class DynamicHotNumbersBot:
    def __init__(self, initial_bank=500000, min_hot_count=2, history_len=50, top_n=4, bet=500):
        self.initial_bank = initial_bank
        self.bank = initial_bank
        self.history = deque(maxlen=history_len)
        self.min_hot_count = min_hot_count
        self.top_n = top_n
        self.bet = bet

    def get_hot_numbers(self):
        counter = Counter(self.history)
        hot_candidates = [(num, count) for num, count in counter.items() if count >= self.min_hot_count]
        hot_candidates.sort(key=lambda x: (-x[1], x[0]))
        hot_numbers = [num for num, _ in hot_candidates[:self.top_n]]
        return set(hot_numbers)

    def simulate_on_file(self, filepath, logpath):
        with open(filepath, encoding='utf-8') as f:
            data = [
                int(part.strip())
                for line in f
                if (part := line.strip().split('-')[-1].strip()).isdigit()
            ]

        with open(logpath, 'w', encoding='utf-8') as log:
            for i, number in enumerate(data):
                hot_numbers = self.get_hot_numbers()
                log.write(f"[{i}] –í—ã–ø–∞–ª–æ: {number} | –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ç–æ–ø: {sorted(hot_numbers)} | ")
                if hot_numbers:
                    self.bank -= len(hot_numbers) * self.bet
                    log.write(f"üéØ –°—Ç–∞–≤–∫–∞ –Ω–∞ {sorted(hot_numbers)}. –í—ã–ø–∞–ª–æ {number}. ")
                    if number in hot_numbers:
                        win = self.bet * 36
                        self.bank += win
                        profit = win - (len(hot_numbers) * self.bet)
                        log.write(f"‚úÖ –ü–æ–±–µ–¥–∞! +{profit} | –ë–∞–Ω–∫: {self.bank}\n")
                    else:
                        log.write(f"–ú–∏–º–æ | –ë–∞–Ω–∫: {self.bank}\n")
                else:
                    log.write("–ù–µ—Ç –≥–æ—Ä—è—á–∏—Ö —á–∏—Å–µ–ª, –ø—Ä–æ–ø—É—Å–∫ —Å—Ç–∞–≤–∫–∏.\n")
                self.history.append(number)

        return self.bank

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    print("üéØ –°–∏–º—É–ª—è—Ü–∏—è –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ô —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≥–æ—Ä—è—á–∏—Ö —á–∏—Å–µ–ª")
    filepath = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, data.txt): ").strip()
    logpath = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, dynamic_hot_log.txt): ").strip()

    bot = DynamicHotNumbersBot(top_n=4)  # –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ø-4
    final_bank = bot.simulate_on_file(filepath, logpath)
    print(f"–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–Ω–∫: {final_bank}")
